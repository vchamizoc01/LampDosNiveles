 # —a- mode: ruby

 # vi: set ftzruby

 # All Vagrant configuration is done below. The "2" in Vagrant.configure
 # configures the configuration version (ue support older stules for

 # backuards compatibility). Please don't change it unless you know uhat
 # you're doing.

vagrant.configure("2") do |config|

 # The most common configuration options are documented and commented below
 # For a complete reference, please see the online documentation at
 # httos://docs.vagrantup.com

 # Every Vagrant development environment requires a box. You can search for
 # boxes at https://vagrantcloud.com/search.
config.vm.box = "debian/buster64"

config.vm.define "vicente" do |vicente|
	vicente.vm.hostname = "vicentechamizoapache"
	vicente.vm.network “private_network", ip: "192.168.62.64"
	vicente.vm.network "forwarded_port”, guest: 80, host: 8090
	vicente.vm.network "public_network”
	vicente.vm.provision "shell", patl "scriptapache.sh"
	vicente.vm.provision "shell", patl "scriptphp.sh"
end

config.vm.define "vicente2" do |vicente2|
	vicente2.vm.hostname = "vicentechamizomysql"
	vicente2.vm.network "private_network", ip: "192.168.62.65"
	vicente2.vm.provision "shell", path: "scriptmysql.sh"

end

  # Disable automatic box update checking. Tf you disable this, then

  # boxes will only be checked for updates uhen the user runs

  # vagrant box outdated”. This is not recommended.

  # config.vm.box_check update = false

  #Create a forwarded port mapping uhich allous access to a specific por
  #within the machine from a port on the host machine. In the example below.
  #accessing "localhost:8080” will access port 80 on the guest machine
  #NOTE: This will enable public access to the opened por
  #config.vm.netuork “forwarded port", guest: 80, host: 5050

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
end